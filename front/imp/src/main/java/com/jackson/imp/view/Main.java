/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jackson.imp.view;

import com.jackson.imp.JsonParsing;
import com.jackson.imp.Request;
import com.jackson.imp.model.dto.inventorySummaryDto;
import com.jackson.imp.model.product;
import com.jackson.imp.model.supplierRecount;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.io.IOException;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PieLabelLinkStyle;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.chart.renderer.xy.StandardXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author luis
 */
public class Main extends javax.swing.JFrame {

    Request request;
    JsonParsing json;

    Products panel;
    ArrayList<product> products;

    public Main() throws IOException, Exception {
//        setUndecorated(true);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);

        request = new Request();
        json = new JsonParsing();

        inventorySummaryDto summary = json.parse(request.getRequest("api/summary"), inventorySummaryDto.class);

        OutputTotalDeProductos.setText(String.valueOf(summary.getTotalProducts()));
        OutputProductTop.setText(summary.getProductsTop().toString());
        OutputProductLowStock.setText(summary.getProductoStock().toString());
        DecimalFormat df = new DecimalFormat("#,###.00");

        System.out.println(summary.getInventoryValue().getDate());
        String truncatedDateString = summary.getInventoryValue().getDate().substring(0, 23);  // Eliminar los dígitos después del punto decimal

        // Formateador para el patrón ISO-8601 sin fracciones de segundo adicionales
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS");

        // Parsear la cadena a LocalDateTime
        LocalDateTime dateTime = LocalDateTime.parse(truncatedDateString, formatter);

        OutputInventoryTotalValue.setText("$" + String.valueOf(df.format(summary.getInventoryValue().getTotalInventoryValue())));
        Panel4Label3.setText(dateTime.getDayOfMonth() + "/" + dateTime.getMonthValue() + "/" + dateTime.getYear());

        CategoryDataset dataset = createBarDataset();

        JFreeChart chart = createBarChart(dataset);
        ChartPanel chartPanel = new ChartPanel(chart);
        BarPanel.add(chartPanel, BorderLayout.CENTER);

        PieDataset pieDataset = createPieDataset();
        JFreeChart chartPie = createPieChart(pieDataset);
        ChartPanel chartPiePanel = new ChartPanel(chartPie);
        BarPanel4.add(chartPiePanel, BorderLayout.CENTER);
        
        JFreeChart plotChart = createPlotChart();
        ChartPanel chartPlot = new ChartPanel(plotChart);
        chartPlot.setMouseWheelEnabled(true);
        jPanel7.add(chartPlot, BorderLayout.CENTER);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fastData = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Panel1Label2 = new javax.swing.JLabel();
        Panel1Label3 = new javax.swing.JLabel();
        OutputTotalDeProductos = new javax.swing.JLabel();
        Panel1Label1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Panel2Label2 = new javax.swing.JLabel();
        Panel2Label3 = new javax.swing.JLabel();
        Panel2Label1 = new javax.swing.JLabel();
        OutputProductTop = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Panel3Label1 = new javax.swing.JLabel();
        Panel3Label3 = new javax.swing.JLabel();
        Panel3Label2 = new javax.swing.JLabel();
        OutputProductLowStock = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Panel4Label2 = new javax.swing.JLabel();
        Panel4Label3 = new javax.swing.JLabel();
        OutputInventoryTotalValue = new javax.swing.JLabel();
        Panel4Label1 = new javax.swing.JLabel();
        BarPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        BarPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fastData.setBackground(new java.awt.Color(255, 255, 255));
        fastData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 231, 235)));
        fastData.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(229, 231, 235), 1, true));
        jPanel1.setForeground(new java.awt.Color(17, 17, 27));
        jPanel1.setPreferredSize(new java.awt.Dimension(180, 150));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel1Label2.setFont(new java.awt.Font("Symbols Nerd Font", 0, 18)); // NOI18N
        Panel1Label2.setForeground(new java.awt.Color(102, 102, 102));
        Panel1Label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel1Label2.setText("󰏗");
        jPanel1.add(Panel1Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 50, 50));

        Panel1Label3.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel1Label3.setForeground(new java.awt.Color(17, 17, 27));
        Panel1Label3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Panel1Label3.setText("Total de productos");
        Panel1Label3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(Panel1Label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 40));

        OutputTotalDeProductos.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        OutputTotalDeProductos.setForeground(new java.awt.Color(17, 17, 27));
        OutputTotalDeProductos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OutputTotalDeProductos.setText("122,122");
        jPanel1.add(OutputTotalDeProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 40));

        Panel1Label1.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel1Label1.setForeground(new java.awt.Color(17, 17, 27));
        Panel1Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel1Label1.setText("Total de productos");
        jPanel1.add(Panel1Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 50));

        fastData.add(jPanel1);
        jPanel1.setBounds(20, 20, 220, 170);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(229, 231, 235), 1, true));
        jPanel2.setForeground(new java.awt.Color(17, 17, 27));
        jPanel2.setPreferredSize(new java.awt.Dimension(180, 150));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel2Label2.setFont(new java.awt.Font("Symbols Nerd Font", 0, 18)); // NOI18N
        Panel2Label2.setForeground(new java.awt.Color(102, 102, 102));
        Panel2Label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel2Label2.setText("󰁜");
        jPanel2.add(Panel2Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 50, 50));

        Panel2Label3.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel2Label3.setForeground(new java.awt.Color(17, 17, 27));
        Panel2Label3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Panel2Label3.setText("Productos");
        Panel2Label3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel2.add(Panel2Label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 40));

        Panel2Label1.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel2Label1.setForeground(new java.awt.Color(17, 17, 27));
        Panel2Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel2Label1.setText("   Productos Más Vendidos");
        jPanel2.add(Panel2Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 50));

        OutputProductTop.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        OutputProductTop.setForeground(new java.awt.Color(17, 17, 27));
        OutputProductTop.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OutputProductTop.setText("Top");
        jPanel2.add(OutputProductTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 40));

        fastData.add(jPanel2);
        jPanel2.setBounds(260, 20, 220, 170);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(229, 231, 235), 1, true));
        jPanel3.setForeground(new java.awt.Color(17, 17, 27));
        jPanel3.setPreferredSize(new java.awt.Dimension(180, 150));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel3Label1.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel3Label1.setForeground(new java.awt.Color(17, 17, 27));
        Panel3Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel3Label1.setText("  Productos Bajo Stock");
        jPanel3.add(Panel3Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 50));

        Panel3Label3.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel3Label3.setForeground(new java.awt.Color(17, 17, 27));
        Panel3Label3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Panel3Label3.setText("Necesitan reabastecimiento");
        Panel3Label3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel3.add(Panel3Label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 40));

        Panel3Label2.setFont(new java.awt.Font("Symbols Nerd Font", 0, 18)); // NOI18N
        Panel3Label2.setForeground(new java.awt.Color(102, 102, 102));
        Panel3Label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel3Label2.setText("󰗖");
        jPanel3.add(Panel3Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 50, 50));

        OutputProductLowStock.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        OutputProductLowStock.setForeground(new java.awt.Color(17, 17, 27));
        OutputProductLowStock.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OutputProductLowStock.setText("25");
        jPanel3.add(OutputProductLowStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 40));

        fastData.add(jPanel3);
        jPanel3.setBounds(500, 20, 220, 170);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(229, 231, 235), 1, true));
        jPanel4.setForeground(new java.awt.Color(17, 17, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(180, 150));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
        });
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel4Label2.setFont(new java.awt.Font("Symbols Nerd Font", 0, 18)); // NOI18N
        Panel4Label2.setForeground(new java.awt.Color(102, 102, 102));
        Panel4Label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel4Label2.setText("");
        jPanel4.add(Panel4Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 50, 50));

        Panel4Label3.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel4Label3.setForeground(new java.awt.Color(17, 17, 27));
        Panel4Label3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Panel4Label3.setText("+10% desde el año pasado");
        Panel4Label3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel4.add(Panel4Label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 40));

        OutputInventoryTotalValue.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        OutputInventoryTotalValue.setForeground(new java.awt.Color(17, 17, 27));
        OutputInventoryTotalValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OutputInventoryTotalValue.setText("$1,234,567");
        jPanel4.add(OutputInventoryTotalValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 40));

        Panel4Label1.setFont(new java.awt.Font("Cantarell", 0, 13)); // NOI18N
        Panel4Label1.setForeground(new java.awt.Color(17, 17, 27));
        Panel4Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel4Label1.setText(" Valor Total del Inventario");
        jPanel4.add(Panel4Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));

        fastData.add(jPanel4);
        jPanel4.setBounds(740, 20, 220, 170);

        BarPanel4.setLayout(new java.awt.BorderLayout());
        fastData.add(BarPanel4);
        BarPanel4.setBounds(20, 220, 460, 310);

        jPanel7.setLayout(new java.awt.BorderLayout());
        fastData.add(jPanel7);
        jPanel7.setBounds(500, 220, 460, 310);

        BarPanel.setLayout(new java.awt.BorderLayout());
        fastData.add(BarPanel);
        BarPanel.setBounds(20, 550, 940, 240);

        getContentPane().add(fastData, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 980, 810));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 231, 235)));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Symbols Nerd Font", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(17, 17, 27));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("󰏔");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 60));

        jLabel3.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(17, 17, 27));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Inventario");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 100, 60));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 61));

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
      // TODO add your handling code here:
      fade(jPanel1, true);
      fade(Panel1Label1, false);
      fade(Panel1Label2, false);
      fade(Panel1Label3, false);
      fade(OutputTotalDeProductos, false);
  }//GEN-LAST:event_jPanel1MouseEntered

  private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
      // TODO add your handling code here:
      fade(jPanel1, false);
      fade(Panel1Label1, true);
      fade(Panel1Label2, true);
      fade(Panel1Label3, true);
      fade(OutputTotalDeProductos, true);
  }//GEN-LAST:event_jPanel1MouseExited

  private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
      // TODO add your handling code here:
      fade(jPanel2, true);
      fade(Panel2Label1, false);
      fade(Panel2Label2, false);
      fade(Panel2Label3, false);
      fade(OutputProductTop, false);
  }//GEN-LAST:event_jPanel2MouseEntered

  private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
      // TODO add your handling code here:
      fade(jPanel2, false);
      fade(Panel2Label1, true);
      fade(Panel2Label2, true);
      fade(Panel2Label3, true);
      fade(OutputProductTop, true);
  }//GEN-LAST:event_jPanel2MouseExited

  private void jPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseEntered
      // TODO add your handling code here:
      fade(jPanel3, true);
      fade(Panel3Label1, false);
      fade(Panel3Label2, false);
      fade(Panel3Label3, false);
      fade(OutputProductLowStock, false);
  }//GEN-LAST:event_jPanel3MouseEntered

  private void jPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseExited
      // TODO add your handling code here:
      fade(jPanel3, false);
      fade(Panel3Label1, true);
      fade(Panel3Label2, true);
      fade(Panel3Label3, true);
      fade(OutputProductLowStock, true);
  }//GEN-LAST:event_jPanel3MouseExited

  private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseEntered
      // TODO add your handling code here:
      fade(jPanel4, true);
      fade(Panel4Label1, false);
      fade(Panel4Label2, false);
      fade(Panel4Label3, false);
      fade(OutputInventoryTotalValue, false);
  }//GEN-LAST:event_jPanel4MouseEntered

  private void jPanel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseExited
      // TODO add your handling code here:
      fade(jPanel4, false);
      fade(Panel4Label1, true);
      fade(Panel4Label2, true);
      fade(Panel4Label3, true);
      fade(OutputInventoryTotalValue, true);
  }//GEN-LAST:event_jPanel4MouseExited

  private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
      // TODO add your handling code here:
      fade(jPanel1, false);
      fade(Panel1Label1, true);
      fade(Panel1Label2, true);
      fade(Panel1Label3, true);
      fade(OutputTotalDeProductos, true);

        try {
            panelView();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

  }//GEN-LAST:event_jPanel1MousePressed

  private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
      // TODO add your handling code here:
      fade(jPanel1, false);
      fade(Panel1Label1, true);
      fade(Panel1Label2, true);
      fade(Panel1Label3, true);
      fade(OutputTotalDeProductos, true);
  }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        try {
            // TODO add your handling code here:
            panelView();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        try {
            // TODO add your handling code here:
            panelView();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel3MousePressed

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        try {
            // TODO add your handling code here:
            panelView();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel4MousePressed

    private void panelView() throws Exception {
        panel = new Products();
        panel.setVisible(true);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void fade(Component component, boolean fadeIn) {
        int fadeSteps = 10;
        int fadeInterval = 100;
        int fadeDelay = 20;
        Color startColor = fadeIn ? Color.WHITE : Color.BLACK;
        Color endColor = fadeIn ? Color.BLACK : Color.WHITE;
        Color[] fadeColors = new Color[fadeSteps];

        for (int i = 0; i < fadeSteps; i++) {
            float ratio = (float) i / (fadeSteps - 1);
            int r = (int) (startColor.getRed() + ratio * (endColor.getRed() - startColor.getRed()));
            int g = (int) (startColor.getGreen() + ratio * (endColor.getGreen() - startColor.getGreen()));
            int b = (int) (startColor.getBlue() + ratio * (endColor.getBlue() - startColor.getBlue()));
            fadeColors[i] = new Color(r, g, b);
        }

        int[] fadeCounter = {0};

        Timer fadeTimer = new Timer(fadeInterval, (actionEvent) -> {
            if (fadeCounter[0] < fadeSteps) {
                if (component instanceof JPanel) {
                    ((JPanel) component).setBackground(fadeColors[fadeCounter[0]]);
                } else if (component instanceof JLabel) {
                    ((JLabel) component).setForeground(fadeColors[fadeCounter[0]]);
                }
                fadeCounter[0]++;
            } else {
                ((Timer) actionEvent.getSource()).stop();
            }
        });

        fadeTimer.setDelay(fadeDelay);
        fadeTimer.start();
    }

    private CategoryDataset createBarDataset() throws IOException {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        List<product> products = json.parseArray(request.getRequest("api/product"), product.class);

        Map<String, Integer> supplierCountMap = new HashMap<>();

        for (product product : products) {
            String supplierName = product.getSupplier().getName();
            int stock = product.getStock();

            if (supplierCountMap.containsKey(supplierName)) {
                int currentCount = supplierCountMap.get(supplierName);
                supplierCountMap.put(supplierName, currentCount + stock);
            } else {
                supplierCountMap.put(supplierName, stock);
            }
        }

        for (Map.Entry<String, Integer> entry : supplierCountMap.entrySet()) {
            String supplierName = entry.getKey();
            int count = entry.getValue();
            dataset.addValue(count, "Productos", supplierName);
        }

        return dataset;
    }

    private PieDataset createPieDataset() throws IOException {
        DefaultPieDataset dataset = new DefaultPieDataset();
        
        products = json.parseArray(request.getRequest("api/product"), product.class);
        
        int total = 0;
        for (product product1 : products) {
            total += product1.getStock();
        }
        System.out.println(total);
        int capacidadDeInventario = 15000;
        
        double porcentajeRestante = capacidadDeInventario - total;
        
        dataset.setValue("Restante", porcentajeRestante);
        dataset.setValue("Productos", total);
        
        return dataset;
    }
    
    private JFreeChart createPlotChart() {
        // Crear la serie de datos
        XYSeries series = new XYSeries("Inventario");
        
        for (product product1 : products) {
            series.add(product1.getStock(), (Number) ( product1.getStock() * product1.getPrice() ));
        }
        
//        series.add(10, 500); // Ejemplo: 10 unidades, $500
//        series.add(15, 300); // Ejemplo: 15 unidades, $300
//        series.add(20, 800); // Ejemplo: 20 unidades, $800
//        // Añadir más datos según sea necesario

        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);

        // Crear el gráfico
        JFreeChart chart = ChartFactory.createScatterPlot(
                "Cantidad en Inventario vs Precio",
                "Cantidad en Inventario", "Precio",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        // Personalizar el gráfico
        XYPlot plot = (XYPlot) chart.getPlot();
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesLinesVisible(0, false);
        renderer.setSeriesShapesVisible(0, true);
        plot.setRenderer(renderer);

        // Mostrar el gráfico en un panel
        return chart;
    }

    private JFreeChart createBarChart(CategoryDataset dataset) {
        JFreeChart chart = ChartFactory.createBarChart(
                "Productos por proveedor", // Chart title
                "Category", // Category axis label
                "Value", // Value axis label
                dataset, // Data
                PlotOrientation.VERTICAL,
                false, // Include legend
                true,
                false
        );

        // Personalizar el gráfico
        CategoryPlot plot = (CategoryPlot) chart.getPlot();
        plot.setBackgroundPaint(Color.WHITE);

        // Utilizar BarRenderer en lugar de XYBarRenderer
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setBarPainter(new StandardBarPainter());
        renderer.setShadowVisible(false);
        renderer.setSeriesPaint(0, Color.decode("#89b4fa"));

        return chart;
    }

    private JFreeChart createPieChart(final PieDataset dataset) {
        final JFreeChart chart = ChartFactory.createPieChart(
                "Capacidad de inventario", // chart title
                dataset, // dataset
                true, // include legend
                true,
                false
        );
        final PiePlot plot = (PiePlot) chart.getPlot();
        plot.setNoDataMessage("No data available");

        // Usar nombres en lugar de índices para explotar secciones
        plot.setExplodePercent("One", 0.30);

        plot.setSectionPaint("One", Color.BLACK);
        plot.setSectionPaint("Two", Color.WHITE);

        plot.setBackgroundPaint(Color.WHITE);

        plot.setOutlinePaint(Color.WHITE);

        plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0}--{1}--{2}"));

        plot.setLabelLinkStyle(PieLabelLinkStyle.STANDARD);

        chart.setBorderVisible(false);

        chart.setBorderPaint(Color.RED);

        chart.setBackgroundPaint(Color.WHITE);

        return chart;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarPanel;
    private javax.swing.JPanel BarPanel4;
    private javax.swing.JLabel OutputInventoryTotalValue;
    private javax.swing.JLabel OutputProductLowStock;
    private javax.swing.JLabel OutputProductTop;
    private javax.swing.JLabel OutputTotalDeProductos;
    private javax.swing.JLabel Panel1Label1;
    private javax.swing.JLabel Panel1Label2;
    private javax.swing.JLabel Panel1Label3;
    private javax.swing.JLabel Panel2Label1;
    private javax.swing.JLabel Panel2Label2;
    private javax.swing.JLabel Panel2Label3;
    private javax.swing.JLabel Panel3Label1;
    private javax.swing.JLabel Panel3Label2;
    private javax.swing.JLabel Panel3Label3;
    private javax.swing.JLabel Panel4Label1;
    private javax.swing.JLabel Panel4Label2;
    private javax.swing.JLabel Panel4Label3;
    private javax.swing.JPanel fastData;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    // End of variables declaration//GEN-END:variables
}
